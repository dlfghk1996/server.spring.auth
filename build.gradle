plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'server.spring'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()

	/** clean 태스크 실행시 QClass 삭제 */
	clean {
		delete file('src/main/generated')
	}
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.3.6.RELEASE'

	// DataBase
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.data:spring-data-envers'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// QueryDSL (== 스프링 부트 3.0 이상 ==)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

	// java.lang.NoClassDefFoundError:javax/persistence/Entity => error 방지
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'   // key
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// ETC
	implementation 'org.modelmapper:modelmapper:2.4.2'
	implementation 'com.google.code.gson:gson'
	implementation 'com.googlecode.json-simple:json-simple:1.1'
	implementation 'org.apache.httpcomponents:httpclient:4.5.12'
	implementation 'org.apache.httpcomponents:httpcore'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Qclass 생성 경로
def generated = "src/main/generated"

// build시 사용할 sourceSet 추가 설정 (src/main/java 디렉터리 외의 파일 빌드 target)
sourceSets {
	main.java.srcDirs += [generated]
}

//configurations {
//    querydsl.extendsFrom compileClasspath
//}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}